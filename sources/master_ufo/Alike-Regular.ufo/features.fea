# automatic
@Uppercase = [ A Aacute Acircumflex Adieresis Agrave Aring Atilde AE B C Ccedilla D Eth E Eacute Ecircumflex Edieresis Egrave F G H I Iacute Icircumflex Idieresis Igrave J K L M N Ntilde O Oacute Ocircumflex Odieresis Ograve Oslash Otilde OE P Thorn Q R S T U Uacute Ucircumflex Udieresis Ugrave V W X Y Yacute Z
];

# Prefix: Languagesystems
languagesystem DFLT dflt;
languagesystem grek dflt;
languagesystem latn dflt;







feature aalt {
# automatic
feature sups;
feature frac;
feature ordn;
feature case;

} aalt;

feature ccmp {
# automatic
lookup ccmp_Other_1 {
	@Markscomb = [dieresis grave acute circumflex caron ring tilde];
	@MarkscombCase = [dieresis.case grave.case acute.case circumflex.case caron.case ring.case tilde.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;

} ccmp;

feature sups {
# automatic
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;

} sups;

feature frac {
# automatic
sub one slash four by onequarter;
sub one slash two by onehalf;
sub three slash four by threequarters;

} frac;

feature ordn {
# automatic
sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;

} ordn;

feature case {
# automatic
sub dieresis by dieresis.case;
sub grave by grave.case;
sub acute by acute.case;
sub circumflex by circumflex.case;
sub caron by caron.case;
sub ring by ring.case;
sub tilde by tilde.case;

} case;
